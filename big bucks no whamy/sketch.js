// Project Title
// Your Name
// Date
//
// Extra for Experts:
// - describe what you did to take this project "above and beyond"

////////////////////////////////////////////////////////////////
// paterns 
// OG:
let og= [
  [3, 16, 13, 10, 18, 8, 6, 14, 7, 5, 15, 11, 17, 2, 12, 1, 9, 4],
  [5, 18, 11, 13, 3, 6, 15, 7, 1, 9, 14, 16, 10, 2, 4, 12, 17, 8],
  [11, 6, 10, 12, 1, 4, 14, 16, 2, 9, 17, 8, 13, 15, 3, 7, 18, 5],
  [17, 10, 15, 13, 2, 8, 18, 16, 12, 3, 5, 11, 7, 4, 1, 9, 14, 6],
  [18, 16, 10, 5, 11, 9, 2, 13, 17, 7, 4, 15, 12, 8, 6, 3, 1, 14]];  

//SECONDARY
// 2, 6, 11, 8, 1, 10, 12, 16, 18, 17, 4, 14, 7, 13, 9, 5, 15, 3
// 8, 9, 5, 13, 7, 1, 8, 17, 6, 14, 4, 11, 2, 16, 12, 3, 15, 10
// 11, 4, 17, 7, 16, 5, 8, 14, 6, 1, 13, 9, 2, 15, 3, 10, 18, 12
// 17, 14, 8, 3, 10, 18, 13, 1, 4, 9, 11, 2, 12, 5, 16, 7, 15, 6
// 18, 6, 14, 7, 15, 2, 11, 13, 5, 16, 12, 8, 3, 1, 9, 4, 17, 10

//third 
//1, 11, 6, 14, 9, 3, 17, 8, 5, 18, 15, 12, 4, 7, 10, 2, 13, 16
//3, 12, 6, 18, 9, 4, 7, 10, 13, 16, 1, 14, 8, 5, 15, 11, 17, 2
//9, 3, 11, 5, 2, 18, 12, 16, 6, 15, 7, 4, 14, 10, 1, 13, 17, 8
//12, 2, 11, 14, 8, 3, 6, 9, 13, 18, 15, 5, 10, 16, 1, 4, 17, 7
//16, 10, 2, 18, 13, 9, 15, 12, 6, 14, 17, 8, 3, 7, 4, 11, 5, 1

// final 
// 1, 9, 3, 15, 6, 10, 17, 11, 8, 14, 2, 18, 5, 13, 7, 4, 12, 16 *
// 1, 13, 9, 3, 6, 12, 16, 10, 18, 7, 15, 2, 14, 4, 11, 5, 8, 17
// 2, 6, 11, 8, 1, 10, 12, 16, 18, 17, 4, 14, 7, 13, 9, 5, 15, 3
// 2, 14, 8, 17, 11, 5, 9, 4, 1, 15, 6, 10, 18, 12, 7, 3, 16, 13
// 3, 12, 6, 10, 18, 15, 9, 4, 7, 16, 13, 2, 14, 8, 5, 11, 17, 1
// 3, 12, 7, 18, 13, 9, 14, 4, 17, 2, 16, 6, 10, 15, 5, 11, 8, 1 *
// 4, 9, 14, 7, 1, 15, 12, 18, 6, 13, 2, 16, 10, 5, 8, 3, 17, 11
// 4, 12, 15, 9, 5, 17, 6, 2, 14, 8, 3, 11, 18, 13, 10, 16, 7, 1
// 5, 17, 11, 1, 13, 18, 14, 10, 6, 2, 16, 7, 15, 12, 8, 3, 9, 4
// 5, 10, 6, 14, 8, 11, 2, 18, 15, 9, 12, 3, 7, 17, 4, 1, 16, 13
// 6, 9, 3, 12, 17, 14, 8, 5, 16, 13, 7, 1, 15, 10, 2, 18, 11, 4 *
// 6, 14, 8, 1, 13, 7, 4, 12, 18, 3, 9, 16, 11, 2, 10, 15, 5, 17
// 7, 13, 18, 15, 9, 4, 12, 6, 1, 14, 3, 16, 10, 2, 17, 5, 11, 8
// 8, 11, 6, 2, 16, 12, 9, 18, 13, 3, 15, 10, 7, 4, 17, 5, 14, 1
// 9, 16, 10, 18, 13, 7, 4, 12, 6, 1, 15, 3, 17, 11, 14, 8, 5, 2
// 10, 5, 18, 12, 6, 1, 9, 4, 7, 15, 3, 16, 13, 17, 11, 2, 14, 8
// 10, 17, 11, 5, 12, 8, 3, 6, 9, 13, 2, 15, 18, 14, 4, 1, 16, 7
// 11, 4, 17, 7, 16, 5, 8, 14, 6, 1, 13, 9, 2, 15, 3, 10, 18, 12 *
// 11, 5, 13, 2, 18, 12, 15, 6, 14, 10, 3, 9, 16, 7, 4, 1, 17, 8
// 11, 6, 14, 18, 13, 7, 3, 12, 15, 9, 4, 17, 8, 5, 2, 16, 10, 1
// 12, 2, 14, 8, 5, 13, 7, 3, 6, 9, 16, 10, 15, 18, 11, 17, 4, 1
// 12, 2, 16, 10, 5, 1, 13, 7, 4, 11, 14, 17, 8, 3, 18, 6, 15, 9
// 13, 2, 18, 15, 11, 5, 9, 12, 8, 3, 7, 10, 17, 6, 14, 4, 1, 16
// 13, 3, 17, 14, 9, 5, 1, 16, 11, 8, 12, 18, 15, 6, 2, 10, 7, 4 *
// 14, 8, 12, 7, 18, 15, 9, 3, 6, 13, 16, 11, 2, 10, 5, 1, 17, 4
// 15, 3, 14, 8, 11, 5, 13, 2, 16, 7, 18, 10, 6, 12, 9, 17, 4, 1
// 15, 18, 12, 6, 3, 10, 14, 8, 11, 5, 2, 16, 13, 17, 4, 7, 1, 9 *
// 16, 5, 10, 15, 3, 7, 18, 12, 8, 14, 9, 17, 11, 6, 2, 13, 1, 4
// 16, 12, 6, 14, 17, 8, 3, 11, 5, 18, 15, 9, 4, 1, 13, 10, 7, 2
// 17, 14, 8, 3, 10, 18, 13, 1, 4, 9, 11, 2, 12, 5, 16, 7, 15, 6
// 18, 6, 14, 7, 15, 2, 11, 13, 5, 16, 12, 8, 3, 1, 9, 4, 17, 10
// 18, 9, 2, 13, 6, 12, 16, 10, 7, 3, 15, 1, 14, 4, 11, 5, 8, 17
////////////////////////////////////////////////////////////////

let rows=6;
let columns=5;
let cellSize;

//let skeleton = [];
let grid = [
  [1,2,3,4,5,6],
  [18,0,0,0,0,7],
  [17,0,0,0,0,8],
  [16,0,0,0,0,9],
  [15,14,13,12,11,10]]; 
  

  
function setup() {
  
 createCanvas(windowWidth, windowHeight);
  if (width < height) {
    cellSize = width;
  }
  else {
    cellSize = height;

  

  }
  
}

function draw() {
  background(220);
  displayGrid();
}


function displayGrid() {
  for (let x = 0; x < rows; x++) {
    for (let y =0; y < columns; y++) {
      if (grid[y][x]>0) {
        rect((cellSize/6) * x, (cellSize/5) * y, cellSize/6,cellSize/5);
      }
    }
  } 
}
function mousePressed(){
  let r= 1;
  for(let l = 0; l <18; l++) {
    for (let i=0; i<grid.length; i++) {
      for (let j = 0; i<grid[i].length; j++) {
        if (grid[i][j] === og[[r][l]]) {
          //i is the y
          //j is the x
          push();
          stroke(random(255), random(255), random(255));
          rect((cellSize/6) * j, (cellSize/5) * i, cellSize/6,cellSize/5);
          pop();
       
        }
      }
    } 
    
    
     
   


    
    
  }
} 







// function board() {
//   for ( let tempskell  of skeleton) { 
   
//     rect(skeleton[tempskell].x, skeleton[tempskell].y, skeleton[tempskell].w, skeleton[tempskell].h);
//   }
// }

// function creayteboard() {
//   for ( let i = 0; i < 19; i++ ) {
//     if (i >= 0 && i <7){
//       let k= i-1;

//       let j= 1;
//     }
//     else if (i >= 7 && i <11){
//       let k=5;

//       let j=i-7;  

//     }
//     else if (i >=11 && i <16 ){
//       let k=6-(i-11);
//       let j=4;
//     }
//     else if (i >=16 && i <19){
//       let k=1;
//       let j=5-(i-16);


//     } 


//     let tempskell={
//       x: ((windowWidth/6)*k),
//       y: ((windowHeight/5)*j),
//       w: (windowWidth/6),
//       h: (windowHeight/5)
//     };
//     skeleton.push(tempskell);
//   }
//}